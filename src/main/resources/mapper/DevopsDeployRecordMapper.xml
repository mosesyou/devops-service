<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.choerodon.devops.infra.mapper.DevopsDeployRecordMapper">
    <select id="listByProjectId" resultType="io.choerodon.devops.infra.dto.DevopsDeployRecordDTO">
		SELECT
			* from (
		SELECT
			ddr.id,
			ddr.project_id,
			ddr.deploy_type,
			ddr.deploy_id,
			ddr.deploy_time,
			dc.`status` deployStatus,
			dc.created_by deployCreatedBy,
			NULL pipelineName,
			NULL pipelineTriggerType,
			NULL pipelineId,
			dasi.id instanceId,
			dasi.env_id envId,
		    de.name as env,
			dasi.app_service_id appServiceId
		FROM
			devops_deploy_record ddr
			LEFT JOIN devops_env_command dc ON ddr.deploy_id = dc.id
		    LEFT JOIN devops_app_service_instance dasi ON dc.object_id = dasi.id
		    LEFT JOIN devops_env de on de.id = dasi.env_id
		WHERE
		    ddr.project_id=#{projectId}
		and
			ddr.deploy_type = 'manual' UNION
		SELECT
			ddr.id,
			ddr.project_id,
			ddr.deploy_type,
			ddr.deploy_id,
			ddr.deploy_time,
			dpc.`status` deployStatus,
			dpc.created_by deployCreatedBy,
			dpc.pipeline_name pipelineName,
			dpc.trigger_type pipelineTriggerType,
			dpc.pipeline_id pipelineId,
		    NULL env,
			NULL instanceId,
			NULL envId,
			NULL appServiceId
		FROM
			devops_deploy_record ddr
			LEFT JOIN devops_pipeline_record dpc ON ddr.deploy_id = dpc.id
		WHERE
			ddr.project_id = #{projectId}
		and
			ddr.deploy_type = 'auto'
			) t
			where t.project_id=#{projectId}
				<include refid="sqlparam"/>
			ORDER BY t.id desc
    </select>

	<sql id="sqlparam">
		<if test='searchParam != null'>
			<choose>
				<when test="searchParam.deployType == null and searchParam.deployStatus == 'running'">
						AND	(t.deployStatus ='running' OR t.deployStatus ='operating')
				</when>
				<otherwise>
					<if test='searchParam.deployType != null and searchParam.deployType.length > 0'>
						AND
						t.deploy_type LIKE CONCAT(CONCAT('%', #{searchParam.deployType, jdbcType=VARCHAR}),'%')
					</if>
					<if test='searchParam.deployStatus != null and searchParam.deployStatus.length > 0'>
						AND
						t.deployStatus =#{searchParam.deployStatus}
					</if>
				</otherwise>
			</choose>

			<if test='searchParam.pipelineName != null and searchParam.pipelineName.length > 0'>
				AND
					t.pipelineName LIKE CONCAT(CONCAT('%', #{searchParam.pipelineName, jdbcType=VARCHAR}),'%')
			</if>
			<if test='searchParam.env != null'>
				AND
					t.envId =#{searchParam.env}
			</if>
			<if test='searchParam.deployId != null'>
				AND
				t.deploy_id =#{searchParam.deployId}
			</if>
			<if test='searchParam.pipelineId != null'>
				AND
				t.pipelineId =#{searchParam.pipelineId}
			</if>
		</if>
		<if test='params != null and params.size > 0'>
			AND
			<foreach collection="params" item="param" open="(" separator=" OR " close=")">
				(t.deploy_type LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
				OR t.deployStatus LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
				OR t.pipelineName LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
				OR t.env LIKE CONCAT(CONCAT('%', #{param, jdbcType=VARCHAR}),'%')
				)
			</foreach>
		</if>
	</sql>

	<delete id="deleteRelatedRecordOfInstance">
        DELETE
        FROM devops_deploy_record
        WHERE deploy_type = 'manual'
        AND deploy_id IN (SELECT command.id
        FROM devops_env_command command
        WHERE command.object = 'instance'
        AND command.object_id = #{instanceId,jdbcType=BIGINT})
	</delete>

	<insert id="batchInsertSelective">
        INSERT INTO devops_deploy_record(project_id, env, deploy_id, deploy_type, deploy_time)
        VALUES
        <foreach collection="records" item="record" separator=",">
            (#{record.projectId,jdbcType=BIGINT},
            #{record.env,jdbcType=VARCHAR},
            #{record.deployId,jdbcType=BIGINT},
            #{record.deployType,jdbcType=VARCHAR},
            #{record.deployTime})
        </foreach>
	</insert>
</mapper>
